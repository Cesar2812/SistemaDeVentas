<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_ListaProductos.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>